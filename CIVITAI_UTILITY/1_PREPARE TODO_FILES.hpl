<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>1_PREPARE TODO_FILES</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <pipeline_status>0</pipeline_status>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2023/10/06 21:19:11.401</created_date>
    <modified_user>-</modified_user>
    <modified_date>2023/10/06 21:19:11.401</modified_date>
  </info>
  <notepads>
    <notepad>
      <backgroundcolorblue>251</backgroundcolorblue>
      <backgroundcolorgreen>232</backgroundcolorgreen>
      <backgroundcolorred>201</backgroundcolorred>
      <bordercolorblue>90</bordercolorblue>
      <bordercolorgreen>58</bordercolorgreen>
      <bordercolorred>14</bordercolorred>
      <fontbold>N</fontbold>
      <fontcolorblue>90</fontcolorblue>
      <fontcolorgreen>58</fontcolorgreen>
      <fontcolorred>14</fontcolorred>
      <fontitalic>N</fontitalic>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <height>73</height>
      <xloc>528</xloc>
      <yloc>336</yloc>
      <note>example of filenames expected : 
CF.SkeletonKnight-ILXL_Ariane.1201834.safetensors

&lt;lora_kind>.&lt;anime_show>-&lt;ILXL_or_whatever>_&lt;name_of_char>.&lt;url_number>.safetensor</note>
      <width>504</width>
    </notepad>
    <notepad>
      <backgroundcolorblue>251</backgroundcolorblue>
      <backgroundcolorgreen>232</backgroundcolorgreen>
      <backgroundcolorred>201</backgroundcolorred>
      <bordercolorblue>90</bordercolorblue>
      <bordercolorgreen>58</bordercolorgreen>
      <bordercolorred>14</bordercolorred>
      <fontbold>N</fontbold>
      <fontcolorblue>90</fontcolorblue>
      <fontcolorgreen>58</fontcolorgreen>
      <fontcolorred>14</fontcolorred>
      <fontitalic>N</fontitalic>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <height>58</height>
      <xloc>608</xloc>
      <yloc>432</yloc>
      <note>this transformation needs : 
- jsoup-1.21.1.jar
inside /lib folder</note>
      <width>155</width>
    </notepad>
  </notepads>
  <order>
    <hop>
      <from>civitai.com url</from>
      <to>ParsingWebPage</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>ParsingWebPage</from>
      <to>Split field to rows</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Split field to rows</from>
      <to>String operations</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>String operations</from>
      <to>Filter rows</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Filter rows</from>
      <to>Regroup with coma</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get safetensors filenames</from>
      <to>Select short_filename</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select short_filename</from>
      <to>Get url_code</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get url_code</from>
      <to>civitai.com url</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Regroup with coma</from>
      <to>Replace in string</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Replace in string</from>
      <to>Sort shortfilename</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Sort shortfilename</from>
      <to>NEW Folder &amp; Files</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>NEW Folder &amp; Files</from>
      <to>Select values</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select values</from>
      <to>File output TODO_FILES</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Sample rows</from>
      <to>DEBUG_OUTPUT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>ParsingWebPage</from>
      <to>Sample rows</to>
      <enabled>N</enabled>
    </hop>
  </order>
  <transform>
    <name>DEBUG_OUTPUT</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <schema_definition/>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding>UTF-8</encoding>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>${path_safetensors_files}/debug_test</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>txt</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery/>
    </file>
    <fields>
      <field>
        <name>short_filename</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <roundingType>half_even</roundingType>
        <length>500</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>path_local</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <roundingType>half_even</roundingType>
        <length>500</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>url_link</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>htmlString</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>httpstatus_result</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency>€</currency>
        <decimal>,</decimal>
        <group> </group>
        <nullif/>
        <trim_type>none</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>0</precision>
      </field>
      <field>
        <name>trigger_word</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>user_value</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>416</xloc>
      <yloc>432</yloc>
    </GUI>
  </transform>
  <transform>
    <name>File output TODO_FILES</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <schema_definition/>
    <separator>;</separator>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding>windows-1257</encoding>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>${path_safetensors_files}/TODO_FILES</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery/>
    </file>
    <fields>
      <field>
        <name>path_local</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>both</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>short_filename</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>both</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>short_filename_new</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>both</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>filename_folder_new</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>both</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>URL_txt</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>both</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>KEYWORDS_txt</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>both</trim_type>
        <roundingType>half_even</roundingType>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>1056</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Filter rows</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compare>
      <condition>
        <conditions>
          <condition>
            <conditions>
</conditions>
            <function>IS NOT NULL</function>
            <leftvalue>trigger_word_split</leftvalue>
            <negated>N</negated>
            <operator>-</operator>
          </condition>
        </conditions>
        <function>=</function>
        <negated>N</negated>
        <operator>-</operator>
      </condition>
    </compare>
    <send_true_to>Regroup with coma</send_true_to>
    <attributes/>
    <GUI>
      <xloc>576</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get safetensors filenames</name>
    <type>GetFileNames</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <doNotFailIfNoFile>N</doNotFailIfNoFile>
    <dynamic_include_subfolders>N</dynamic_include_subfolders>
    <file>
      <file_required>Y</file_required>
      <filemask>.*\.safetensors</filemask>
      <include_subfolders>N</include_subfolders>
      <name>${path_safetensors_files}</name>
    </file>
    <filefield>N</filefield>
    <filter>
      <filterfiletype>only_files</filterfiletype>
    </filter>
    <isaddresult>Y</isaddresult>
    <limit>0</limit>
    <raiseAnExceptionIfNoFile>N</raiseAnExceptionIfNoFile>
    <rownum>N</rownum>
    <attributes/>
    <GUI>
      <xloc>112</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get url_code</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here



var split_short_filename = short_filename.split(".");

var url_link = getVariable("url_civitai_com_models", "")+short_filename.split(".")[split_short_filename.length-2];

</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>-1</jsScript_type>
        <jsScript_name>getVariable_Sample</jsScript_name>
        <jsScript_script>// Retrieves the value of a given Hop Variable
            //
            // Usage:
            // getVariable(var, var);
            // 1: String - The name of the variable to retrieve.
            // 2: String - The default if the variable doesn't exist.
            //
            // 2007-07-27
            //
            var strVarName="getVariableTest";
            var strVarValue="123456";
            Alert(getVariable(strVarName, ""));
            setVariable(strVarName,strVarValue, "r");
            Alert(getVariable(strVarName, ""));
            strVarValue="654321";
            setVariable(strVarName,strVarValue, "r");
            Alert(getVariable(strVarName, ""));
        </jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>url_link</name>
        <rename>url_link</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>256</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>NEW Folder &amp; Files</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>///////////////////////////
//--- INITIALISATIONS ---//
///////////////////////////

var short_filename_new = ""; 
var filename_folder_new = "";
var URL_txt = url_link;
var KEYWORDS_txt = trigger_word_split;

///////////////////////////
//--- MATCHING REGEXP ---//
///////////////////////////

// Définition de la chaîne à analyser et de l'expression régulière
var strReg = "^(.*?)\\.(\\d+)\\.(safetensors)$";

// Appel de la fonction str2RegExp
var xArr = str2RegExp(short_filename, strReg);


if (xArr != null) {
	// affectation résultats de short_filename_new
    short_filename_new = xArr[0]+".("+user_value+")."+xArr[1]+"."+xArr[2];

	// affectation résultats de filename_folder_new
	filename_folder_new = xArr[0]+".("+user_value+")."+xArr[1];
}
</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>-1</jsScript_type>
        <jsScript_name>str2RegExp_Sample</jsScript_name>
        <jsScript_script>// Split's a String with a Regular Expression to an Array.
//
// Usage:
// replace(var, var, var);
// 1: String - The Variable with the Content
// 2: String - The Regular Expression to apply
//
// 2006-11-15
//
var strToMatch = "info@proconis.de";
var strReg = "^(\\w+)@([a-zA-Z_]+?)\\.([a-zA-Z]{2,3})$";
var xArr =  str2RegExp(strToMatch, strReg);
if ( xArr != null ) {
    for(i=0;i&lt;xArr.length;i++) {
	    Alert(xArr[i]);
	}
}
else {
    Alert("no match");
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>short_filename_new</name>
        <rename>short_filename_new</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>filename_folder_new</name>
        <rename>filename_folder_new</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>URL_txt</name>
        <rename>URL_txt</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>KEYWORDS_txt</name>
        <rename>KEYWORDS_txt</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>896</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform>
    <name>ParsingWebPage</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//////////////////////////
// == INITIALISATION == //
//////////////////////////

// Importer la bibliothèque Jsoup
var Package = JavaImporter(org.jsoup.Jsoup);

// Parser le HTML avec Jsoup
var doc = Package.Jsoup.parse(htmlString);

// variable user_value à retourner
var user_value = "";

////////////////////////
// == TRIGGER WORDS == //
////////////////////////

// variable trigger_word à retourner
var trigger_word = "none";

// Trouver la cellule qui contient le texte "Trigger Words"
var triggerWordsCell = doc.select("td:contains(Trigger Words)").first();

// Vérifier si la cellule a été trouvée
if(triggerWordsCell != null) {
    // Trouver la cellule adjacente qui contient les mots
    var triggerWordCell = triggerWordsCell.nextElementSibling();

    // Vérifier si la cellule adjacente a été trouvée
    if(triggerWordCell != null) {
        // Obtenir le contenu HTML de la cellule
        var htmlContent = triggerWordCell.html();

		// je force l'ajout de virgule
		htmlContent = replace(htmlContent,"&lt;/div>",",");
		//cas avec des points svg	
		htmlContent = replace(htmlContent,"&lt;/svg>","|");
      
        // Retirer toute balise HTML restante pour ne garder que le texte
        trigger_word = Package.Jsoup.parse(htmlContent).text();
	}
}

// Dans le cas où trigger_word n'a pas été trouvé
if (trigger_word == "none"){
	// trouver le script contenant les donnes JSON
	var jsonScript = doc.getElementById("__NEXT_DATA__");
	if (jsonScript!=null){
		//Extraire le texte JSON du script
		var jsonText = jsonScript.html();

		///////////
		// CAS 1 //
		///////////
		// Convertir le texte en objet JSON
		var jsonData = JSON.parse(jsonText);
		// on récupère la valeur du username
		var trainedWords = "";
		try {
			trainedWords = jsonData.props.pageProps.trpcState.json.queries[1].state.data.modelVersions[0].trainedWords;
            if (trainedWords &amp;&amp; trainedWords.length >= 1) {
                // Joindre les mots entraînés pour former une phrase
                trigger_word = trainedWords.join(",");
            }
		}catch (error){
		}

		///////////
		// CAS 2 //
		///////////
		if (trigger_word == "none"){
        	// Utiliser RegExp pour trouver la liste des mots entraînés
	        var match = /"trainedWords":\[(.*?)\]/.exec(jsonText);
	        if (match &amp;&amp; match[1]) {
	            // Remplacer les guillemets et espaces superflus, puis splitter si nécessaire
	            var trainedWords = match[1].replace(/"/g, '').split(',');
	            if (trainedWords.length > 0) {
	                trigger_word = trainedWords.join(",");
            }
    	    } else {
        	}
		}

		///////////
		// CAS 3 - NOUVEAU : Structure alternative pour pages anciennes
		///////////
		if (trigger_word == "none"){
			try {
				// Essayer une structure JSON alternative
				trainedWords = jsonData.props.pageProps.model.modelVersions[0].trainedWords;
				if (trainedWords &amp;&amp; trainedWords.length >= 1) {
					trigger_word = trainedWords.join(",");
				}
			} catch (error) {
				// Continuer vers le cas suivant
			}
		}

		///////////
		// CAS 4 - NOUVEAU : Recherche dans toutes les queries
		///////////
		if (trigger_word == "none"){
			try {
				var queries = jsonData.props.pageProps.trpcState.json.queries;
				for (var i = 0; i &lt; queries.length; i++) {
					if (queries[i].state &amp;&amp; queries[i].state.data &amp;&amp; queries[i].state.data.modelVersions) {
						trainedWords = queries[i].state.data.modelVersions[0].trainedWords;
						if (trainedWords &amp;&amp; trainedWords.length >= 1) {
							trigger_word = trainedWords.join(",");
							break;
						}
					}
				}
			} catch (error) {
				// Continuer vers le cas suivant
			}
		}
	}
}

/////////////////////////
// == Attribut USER == //
/////////////////////////

// TEST 1 - NOUVEAU : Extraction depuis JSON (priorité)
if (user_value == "") {
	var jsonScript = doc.getElementById("__NEXT_DATA__");
	if (jsonScript != null) {
		var jsonText = jsonScript.html();
		try {
			var jsonData = JSON.parse(jsonText);
			
			// CAS 1 : Structure moderne
			try {
				user_value = jsonData.props.pageProps.trpcState.json.queries[1].state.data.user.username;
			} catch (error) {
				// CAS 2 : Structure alternative
				try {
					user_value = jsonData.props.pageProps.model.user.username;
				} catch (error2) {
					// CAS 3 : Recherche dans toutes les queries
					try {
						var queries = jsonData.props.pageProps.trpcState.json.queries;
						for (var i = 0; i &lt; queries.length; i++) {
							if (queries[i].state &amp;&amp; queries[i].state.data &amp;&amp; queries[i].state.data.user) {
								user_value = queries[i].state.data.user.username;
								break;
							}
						}
					} catch (error3) {
						// CAS 4 : Fallback avec regex sur le JSON
						var userMatch = /"username":"([^"]+)"/.exec(jsonText);
						if (userMatch &amp;&amp; userMatch[1]) {
							user_value = userMatch[1];
						}
					}
				}
			}
		} catch (error) {
			// Si le parsing JSON échoue complètement, continuer vers les tests HTML
		}
	}
}

// TEST 2 - EXISTANT : Recherche dans les liens HTML
userElement = doc.select("a[href^=/user/]").first();

// Vérifier si la cellule a été trouvée
if(userElement != null &amp;&amp; user_value == ""){
    // Extrayez la valeur de l'attribut href
    var hrefValue = userElement.attr("href");

    // Utilisez JavaScript pour extraire le nom d'utilisateur de l'attribut href
    user_value = hrefValue.split("/")[2];    	
}

// TEST 3 - NOUVEAU : Recherche alternative dans les liens avec d'autres sélecteurs
if (user_value == "") {
	// Essayer d'autres sélecteurs pour les liens utilisateur
	var userElement2 = doc.select("a[href*=/user/]").first();
	if (userElement2 != null) {
		var hrefValue2 = userElement2.attr("href");
		var userParts = hrefValue2.split("/");
		for (var i = 0; i &lt; userParts.length; i++) {
			if (userParts[i] == "user" &amp;&amp; i + 1 &lt; userParts.length) {
				user_value = userParts[i + 1];
				break;
			}
		}
	}
}

// TEST 4 - EXISTANT : Sélectionner le script JSON-LD contenant les informations de l'auteur
var jsonLdElement = doc.select("script[type=application/ld+json]").first();
if ((jsonLdElement != null) &amp;&amp; (user_value=="")){
	var jsonContent = jsonLdElement.html();
	try {
	    var jsonData = new org.json.JSONObject(jsonContent);
	    var author = jsonData.getString("author");
		user_value = author;
	}catch (error){
	}
}

// TEST 5 - NOUVEAU : Recherche dans les métadonnées de la page
if (user_value == "") {
	// Chercher dans les balises meta
	var metaAuthor = doc.select("meta[name=author]").first();
	if (metaAuthor != null) {
		user_value = metaAuthor.attr("content");
	}
}

// TEST 6 - NOUVEAU : Recherche par regex dans tout le HTML pour pages très anciennes
if (user_value == "") {
	// Regex pour trouver des patterns d'utilisateur dans le HTML brut
	var userRegexPatterns = [
		/\/user\/([^\/\s"'&lt;&gt;]+)/g,
		/"user":\s*"([^"]+)"/g,
		/by\s+([a-zA-Z0-9_-]+)/g
	];
	
	for (var p = 0; p &lt; userRegexPatterns.length; p++) {
		var matches = htmlString.match(userRegexPatterns[p]);
		if (matches &amp;&amp; matches.length > 0) {
			// Prendre le premier match et extraire le nom d'utilisateur
			var match = userRegexPatterns[p].exec(matches[0]);
			if (match &amp;&amp; match[1]) {
				user_value = match[1];
				break;
			}
		}
	}
}
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>trigger_word</name>
        <rename>trigger_word</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>user_value</name>
        <rename>user_value</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>416</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Regroup with coma</name>
    <type>MemoryGroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <aggregate>trigger_word_split</aggregate>
        <subject>trigger_word_split</subject>
        <type>CONCAT_STRING</type>
        <valuefield>,</valuefield>
      </field>
    </fields>
    <give_back_row>N</give_back_row>
    <group>
      <field>
        <name>path_local</name>
      </field>
      <field>
        <name>short_filename</name>
      </field>
      <field>
        <name>url_link</name>
      </field>
      <field>
        <name>user_value</name>
      </field>
    </group>
    <attributes/>
    <GUI>
      <xloc>736</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Replace in string</name>
    <type>ReplaceString</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <case_sensitive>N</case_sensitive>
        <in_stream_name>trigger_word_split</in_stream_name>
        <is_unicode>N</is_unicode>
        <replace_by_string>| </replace_by_string>
        <replace_string>|,</replace_string>
        <set_empty_string>N</set_empty_string>
        <use_regex>N</use_regex>
        <whole_word>N</whole_word>
      </field>
      <field>
        <case_sensitive>N</case_sensitive>
        <in_stream_name>trigger_word_split</in_stream_name>
        <is_unicode>N</is_unicode>
        <replace_string>\|$</replace_string>
        <set_empty_string>N</set_empty_string>
        <use_regex>Y</use_regex>
        <whole_word>N</whole_word>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>736</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Sample rows</name>
    <type>SampleRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <linesrange>1</linesrange>
    <attributes/>
    <GUI>
      <xloc>416</xloc>
      <yloc>336</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Select short_filename</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <length>-2</length>
        <name>short_filename</name>
        <precision>-2</precision>
      </field>
      <field>
        <length>-2</length>
        <name>path</name>
        <precision>-2</precision>
        <rename>path_local</rename>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <attributes/>
    <GUI>
      <xloc>112</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Select values</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <length>-2</length>
        <name>path_local</name>
        <precision>-2</precision>
      </field>
      <field>
        <length>-2</length>
        <name>short_filename</name>
        <precision>-2</precision>
      </field>
      <field>
        <length>-2</length>
        <name>short_filename_new</name>
        <precision>-2</precision>
      </field>
      <field>
        <length>-2</length>
        <name>filename_folder_new</name>
        <precision>-2</precision>
      </field>
      <field>
        <length>-2</length>
        <name>user_value</name>
        <precision>-2</precision>
      </field>
      <field>
        <length>-2</length>
        <name>URL_txt</name>
        <precision>-2</precision>
      </field>
      <field>
        <length>-2</length>
        <name>KEYWORDS_txt</name>
        <precision>-2</precision>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <attributes/>
    <GUI>
      <xloc>1056</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Sort shortfilename</name>
    <type>SortRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compress>N</compress>
    <directory>%%java.io.tmpdir%%</directory>
    <fields>
      <field>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <name>short_filename</name>
        <presorted>N</presorted>
      </field>
    </fields>
    <sort_size>1000000</sort_size>
    <unique_rows>N</unique_rows>
    <attributes/>
    <GUI>
      <xloc>896</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Split field to rows</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <delimiter>,</delimiter>
    <delimiter_is_regex>N</delimiter_is_regex>
    <newfield>trigger_word_split</newfield>
    <resetrownumber>Y</resetrownumber>
    <rownum>N</rownum>
    <splitfield>trigger_word</splitfield>
    <attributes/>
    <GUI>
      <xloc>416</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>String operations</name>
    <type>StringOperations</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <in_stream_name>trigger_word_split</in_stream_name>
        <out_stream_name/>
        <trim_type>both</trim_type>
        <lower_upper>none</lower_upper>
        <padding_type>none</padding_type>
        <pad_char/>
        <pad_len/>
        <init_cap>no</init_cap>
        <mask_xml>none</mask_xml>
        <digits>none</digits>
        <remove_special_characters>none</remove_special_characters>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>576</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>civitai.com url</name>
    <type>Http</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <url>https://civitai.com/models/153269</url>
    <urlInField>Y</urlInField>
    <ignoreSsl>N</ignoreSsl>
    <urlField>url_link</urlField>
    <encoding/>
    <httpLogin/>
    <httpPassword>Encrypted </httpPassword>
    <proxyHost/>
    <proxyPort/>
    <socketTimeout>1000000</socketTimeout>
    <connectionTimeout>1000000</connectionTimeout>
    <closeIdleConnectionsTime>-1</closeIdleConnectionsTime>
    <lookup>
    </lookup>
    <result>
      <name>htmlString</name>
      <code>httpstatus_result</code>
      <response_time/>
      <response_header/>
    </result>
    <attributes/>
    <GUI>
      <xloc>256</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
